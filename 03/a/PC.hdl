// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

	/*
	 * Input Mux (inMux):
	 * Either pipe through the input value, or the value from incMux
	 */
	Mux16(a=pipeBack, b=in, sel=load, out=toReset);
	
	/* 
	 * Resetting the Counter (resMux):
	 * Reset value if "reset=1" else pipe through value from inMux
	 * Set b=false
	 */
	Mux16(a=toReset, b=false, sel=reset, out=regIn);
	
	/*
	 * Register:
	 * Enable write to register always by setting the load of the register
	 * to true always
	 * One output is the output of the chip, the other one gets piped to the
	 * incrementer
	 */
	Register(in=regIn, load=true, out=regOut, out=out);
	
	/*
	 * Incrementing:
	 * Get the value from the register and put out the incremented value
	 * Depending on "inc" pipe back the incremented result to the first Mux
	 * or pipe back value stored in the register (incMux)
	 */
	Inc16(in=regOut, out=incVal);
	Mux16(a=regOut, b=incVal, sel=inc, out=pipeBack);
}
